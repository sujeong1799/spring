package com.myweb.www.controller;

import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.stereotype.Service;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;

import com.myweb.www.domain.UserVO;
import com.myweb.www.service.UserService;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@RequestMapping("/member/*")
@Controller
public class UserController {

	// private static final Logger log =
	// LoggerFactory.getLogger(UserController.class);
	@Inject
	private UserService usv;

	@GetMapping("/signup") // getMapping으로 온 signup
	public String index(Model m) {
		log.info("index 접근 완료");
//		m.addAttribute("msg_home",1);//값을 담아주세요   // 메세지 보낼거면 쓰고 아니면 안써도 됨
		return "/user/signup"; // 모델은 리턴값이 있어야함 return값은 경로임
	}

	@PostMapping("/signup") // postMapping으로 온 signup
	public String signupPost(Model m, UserVO uvo) { // UserVO의 값을 가져와서 사용
		log.info("회원가입 접근 완료");
		log.info(uvo.toString());
		int isOk =usv.signUp(uvo); // 로그인성공 실패 하고싶으면 쓰고 아니면 안써도 됨
		if(isOk > 0) {
			m.addAttribute("msg_signup", 1);
			// m.에다가 내용 넣어서 뿌려줄거다.
		}else {
			m.addAttribute("msg_signup", 0);
		}
		return "home"; // 결과 페이지 destPage임

	}
	
	@GetMapping("/login")
	public String index2(Model m) {
		log.info("index 접근 완료");
//		m.addAttribute("msg_home",1);//값을 담아주세요   // 메세지 보낼거면 쓰고 아니면 안써도 됨
		return "/user/login"; // 모델은 리턴값이 있어야함 return값은 경로임
	}
	@PostMapping("/login")
	public String loginPost(Model m, UserVO user, HttpServletRequest request) {
		// request역할을 하는 애가 Model임 .........,,,,,....,,,
		
		// UserVO user말고 String id, String pw로 받아도 됨
		 // log.info(">> id "+id+","+"pw "+pw);
		
		// 파라미터로 받은 id, pw를 db에 넘겨주고 일치하는 객체를 받음
		UserVO isUser = usv.isUser(user.getId(), user.getPw());
		log.info("로그인 접근 완료"+ user.toString());
//		log.info(">>> isUser >"+isUser.toString());
		
	
		// DB에서 얻은 객체가 null이 아니라면 세션 연결 저장
		if( isUser != null) {
			HttpSession ses = request.getSession();
			ses.setAttribute("ses", isUser); // 세션에 객체 담기
			ses.setMaxInactiveInterval(60*10); // 로그인 유지 시간 (초단위)
			//담고싶으믄 담아
			m.addAttribute("user > ", isUser);
			m.addAttribute("msg_login", 1); // 잘됐으면 msg_login에 1을 담아주세요
		}else {
			m.addAttribute("msg_login", 0); // 실패해쓰면 0담아
		}

		return "home";
	}
}
